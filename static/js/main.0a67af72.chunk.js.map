{"version":3,"sources":["utils.ts","constants/utils.js","constants/numbers.ts","constants/shapes.ts","services/timers.ts","services/engine.ts","components/Needle/Needle.tsx","components/Clock/Clock.tsx","components/Number/NumberLineClock.tsx","components/Number/NumberLines.tsx","components/Number/Number.tsx","components/ClockClock24/ButtonTest.tsx","components/ClockClock24/ClockClock24.tsx","config.ts","index.tsx"],"names":["startimeout","time","cancel","promise","Promise","resolve","reject","timeout","setTimeout","clearTimeout","getAnimTime","c","propOr","byAnimationTime","descend","getRandomBoolean","Boolean","Math","round","random","DEACTIVATE_TOP_RIGHT","hours","minutes","DEACTIVATE_BOTTOM_RIGHT","DEACTIVATE_BOTTOM_LEFT","DEACTIVATE_TOP_LEFT","VERTICAL_LINE","HORIZONTAL_LINE","OBLIQUE_LINE","TOP","RIGHT","BOTTOM","LEFT","ANGLE_TOP_LEFT","ANGLE_TOP_RIGHT","ANGLE_BOTTOM_LEFT","ANGLE_BOTTOM_RIGHT","NUMBERS","utils","ALL_OBLIQUES","ALL_DEACTIVATE","LINEAR","SYMMETRICAL","getRandowShapedTimer","type","shapes","SHAPES","max","min","floor","getRandomNumber","length","getSameShape","nb","shapeType","shape","Array","fill","getDifferentShape","map","getTimeTimer","Date","now","toTimeString","replace","slice","split","s","parseInt","isNeg","sign","roundRest","restRotation","restRound","abs","getStartPosition","start","rotate","end","rotateReverse","rest","updateClocksProperties","numbers","cb","number","numberIndex","clockLines","clockLinesIndex","clock","clockIndex","setClockDelay","xPos","animationTime","delay","animationDelay","computeDelays","timer","rtl","NB_NUMBERS","computeAnimationType","animationType","rotateClock","currentHours","currentMinutes","isMinutesReversed","resetClock","computeTimer","seq","curTimer","nextTimerState","yPos","computeRotation","isReverse","ltr","computeSequences","sequences","lastTimer","reduce","acc","last","state","index","arr","nbTimers","computeAnimationTypeByPosition","getWaitSequence","run","prevTimer","isSame","getTimers","hasDelay","concat","Needle","height","width","style","borderTopLeftRadius","borderTopRightRadius","className","ANIMATION_TIMING_CONFIG","Clock","size","clockSizeStyle","transitionDelay","transitionTiming","transition","needleWidth","needleHeight","transform","needleRotate","NumberLineClock","options","clockSize","NumberLines","numberLines","numberLine","key","indexC","Number","ButtonTest","onClick","role","aria-label","ClockClock24","this","startNextCycle","cancelTimeout","then","startCycle","pipe","flatten","sort","head","getMaxAnimationTime","setState","props","sequencesPromise","animateTimer","func","clearTimer","nextTime","getSeconds","onAnimateClick","Component","paddingClock","document","body","clientWidth","screenClockSize","config","ReactDOM","render","clockPadding","getElementById"],"mappings":"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","file":"static/js/main.0a67af72.chunk.js","sourcesContent":["import { pipe, flatten, propOr, descend, sort, head } from 'ramda';\nimport { Timer, Clock } from './types';\n\nexport type Timeout = {\n  promise: Promise<unknown>;\n  cancel: () => void;\n}\nexport const startimeout = (\n  time: number,\n): Timeout => {\n  let cancel = () => {};\n  const promise = new Promise((resolve, reject) => {\n    const timeout = setTimeout(resolve, time);\n    cancel = () => {\n      clearTimeout(timeout);\n      reject();\n    };\n    return timeout;\n  });\n\n  return { promise, cancel };\n};\nexport const runSequences = (arr: any[]): Promise<unknown> =>\n  arr.reduce((promise, func) => promise.then(func), Promise.resolve());\n\nconst getAnimTime = (c: Clock): number => propOr(0, 'animationTime')(c);\nconst byAnimationTime = descend(getAnimTime);\n\nexport const getMaxAnimationTime = (timer: Timer) =>\n  pipe(\n    // @ts-ignore\n    flatten,\n    sort(byAnimationTime),\n    head,\n    getAnimTime,\n    // @ts-ignore\n  )(timer);\n\nexport const getRandomNumber = (max: number, min = 1): number =>\n  Math.floor(Math.random() * (max + min));\n\nexport const getRandomBoolean = (): boolean =>\n  Boolean(Math.round(Math.random()));\n","export default {\n  DEACTIVATE_TOP_RIGHT: { hours: 45, minutes: 45 },\n  DEACTIVATE_BOTTOM_RIGHT: { hours: 135, minutes: 135 },\n  DEACTIVATE_BOTTOM_LEFT: { hours: 225, minutes: 225 },\n  DEACTIVATE_TOP_LEFT: { hours: 315, minutes: 315 },\n  VERTICAL_LINE: { hours: 360, minutes: 180 },\n  HORIZONTAL_LINE: { hours: 90, minutes: 270 },\n  OBLIQUE_LINE: { hours: 45, minutes: 225 },\n  TOP: { hours: 360, minutes: 360 },\n  RIGHT: { hours: 90, minutes: 90 },\n  BOTTOM: { hours: 180, minutes: 180 },\n  LEFT: { hours: 270, minutes: 270 },\n  ANGLE_TOP_LEFT: { hours: 360, minutes: 270 },\n  ANGLE_TOP_RIGHT: { hours: 90, minutes: 360 },\n  ANGLE_BOTTOM_LEFT: { hours: 270, minutes: 180 },\n  ANGLE_BOTTOM_RIGHT: { hours: 180, minutes: 90 },\n};\n","import { Number } from '../types';\nimport utils from './utils';\n\nconst NUMBERS: Number[] = [\n  [\n    // 0\n    [utils.ANGLE_BOTTOM_RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.VERTICAL_LINE, utils.VERTICAL_LINE],\n    [utils.ANGLE_TOP_RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n  [\n    // 1\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.BOTTOM],\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.VERTICAL_LINE],\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.TOP],\n  ],\n  [\n    // 2\n    [utils.RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.ANGLE_BOTTOM_RIGHT, utils.ANGLE_TOP_LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.LEFT],\n  ],\n  [\n    // 3\n    [utils.RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.RIGHT, utils.ANGLE_TOP_LEFT],\n    [utils.RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n  [\n    // 4\n    [utils.BOTTOM, utils.BOTTOM],\n    [utils.ANGLE_TOP_RIGHT, utils.VERTICAL_LINE],\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.TOP],\n  ],\n  [\n    // 5\n    [utils.ANGLE_BOTTOM_RIGHT, utils.LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n  [\n    // 6\n    [utils.ANGLE_BOTTOM_RIGHT, utils.LEFT],\n    [utils.VERTICAL_LINE, utils.ANGLE_BOTTOM_LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n  [\n    // 7\n    [utils.RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.VERTICAL_LINE],\n    [utils.DEACTIVATE_BOTTOM_LEFT, utils.TOP],\n  ],\n  [\n    // 8\n    [utils.ANGLE_BOTTOM_RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.ANGLE_TOP_LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n  [\n    // 9\n    [utils.ANGLE_BOTTOM_RIGHT, utils.ANGLE_BOTTOM_LEFT],\n    [utils.ANGLE_TOP_RIGHT, utils.VERTICAL_LINE],\n    [utils.RIGHT, utils.ANGLE_TOP_LEFT],\n  ],\n];\n\nexport default NUMBERS;\n","import { Number, Timer } from '../types';\nimport utils from './utils';\n\nconst ALL_OBLIQUES: Number = [\n  // OBLIQUE\n  [utils.OBLIQUE_LINE, utils.OBLIQUE_LINE],\n  [utils.OBLIQUE_LINE, utils.OBLIQUE_LINE],\n  [utils.OBLIQUE_LINE, utils.OBLIQUE_LINE],\n];\nconst ALL_DEACTIVATE: Number = [\n  [utils.DEACTIVATE_BOTTOM_LEFT, utils.DEACTIVATE_BOTTOM_LEFT],\n  [utils.DEACTIVATE_BOTTOM_LEFT, utils.DEACTIVATE_BOTTOM_LEFT],\n  [utils.DEACTIVATE_BOTTOM_LEFT, utils.DEACTIVATE_BOTTOM_LEFT],\n];\nexport const OBLIQUES: Timer = [ALL_OBLIQUES, ALL_OBLIQUES, ALL_OBLIQUES, ALL_OBLIQUES];\nexport const DEACTIVATE: Timer = [\n  ALL_DEACTIVATE,\n  ALL_DEACTIVATE,\n  ALL_DEACTIVATE,\n  ALL_DEACTIVATE,\n];\nexport const WIND: Timer = [\n  [\n    [\n      { hours: 95, minutes: 95 },\n      { hours: 100, minutes: 100 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 85, minutes: 85 },\n      { hours: 80, minutes: 80 },\n    ],\n  ],\n  [\n    [\n      { hours: 110, minutes: 110 },\n      { hours: 150, minutes: 150 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 70, minutes: 70 },\n      { hours: 30, minutes: 30 },\n    ],\n  ],\n  [\n    [\n      { hours: 210, minutes: 210 },\n      { hours: 250, minutes: 250 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 330, minutes: 330 },\n      { hours: 290, minutes: 290 },\n    ],\n  ],\n  [\n    [\n      { hours: 260, minutes: 260 },\n      { hours: 265, minutes: 265 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 280, minutes: 280 },\n      { hours: 275, minutes: 275 },\n    ],\n  ],\n];\nexport const SQUARES: Timer = [\n  [\n    [\n      { hours: 225, minutes: 225 },\n      { hours: 225, minutes: 225 },\n    ],\n    [\n      { hours: 135, minutes: 45 },\n      { hours: 135, minutes: 45 },\n    ],\n    [\n      { hours: 315, minutes: 315 },\n      { hours: 315, minutes: 315 },\n    ],\n  ],\n  [\n    [\n      { hours: 225, minutes: 225 },\n      { hours: 225, minutes: 225 },\n    ],\n    [\n      { hours: 135, minutes: 45 },\n      { hours: 135, minutes: 45 },\n    ],\n    [\n      { hours: 315, minutes: 315 },\n      { hours: 315, minutes: 315 },\n    ],\n  ],\n  [\n    [\n      { hours: 135, minutes: 135 },\n      { hours: 135, minutes: 135 },\n    ],\n    [\n      { hours: 315, minutes: 225 },\n      { hours: 315, minutes: 225 },\n    ],\n    [\n      { hours: 45, minutes: 45 },\n      { hours: 45, minutes: 45 },\n    ],\n  ],\n  [\n    [\n      { hours: 135, minutes: 135 },\n      { hours: 135, minutes: 135 },\n    ],\n    [\n      { hours: 315, minutes: 225 },\n      { hours: 315, minutes: 225 },\n    ],\n    [\n      { hours: 45, minutes: 45 },\n      { hours: 45, minutes: 45 },\n    ],\n  ],\n];\nexport const SYMMETRICAL_1: Timer = [\n  [\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n  ],\n  [\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n  ],\n  [\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n  ],\n  [\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n  ],\n];\nexport const SYMMETRICAL_2: Timer = [\n  [\n    [\n      { hours: 135, minutes: 135 },\n      { hours: 135, minutes: 135 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 45, minutes: 45 },\n      { hours: 45, minutes: 45 },\n    ],\n  ],\n  [\n    [\n      { hours: 135, minutes: 135 },\n      { hours: 135, minutes: 135 },\n    ],\n    [\n      { hours: 270, minutes: 270 },\n      { hours: 270, minutes: 270 },\n    ],\n    [\n      { hours: 45, minutes: 45 },\n      { hours: 45, minutes: 45 },\n    ],\n  ],\n  [\n    [\n      { hours: 235, minutes: 235 },\n      { hours: 235, minutes: 235 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 315, minutes: 315 },\n      { hours: 315, minutes: 315 },\n    ],\n  ],\n  [\n    [\n      { hours: 235, minutes: 235 },\n      { hours: 235, minutes: 235 },\n    ],\n    [\n      { hours: 90, minutes: 90 },\n      { hours: 90, minutes: 90 },\n    ],\n    [\n      { hours: 315, minutes: 315 },\n      { hours: 315, minutes: 315 },\n    ],\n  ],\n];\n\nexport const LINEAR: Timer[] = [OBLIQUES, WIND, DEACTIVATE];\nexport const SYMMETRICAL: Timer[] = [SQUARES, SYMMETRICAL_1, SYMMETRICAL_2];\n\nexport type ShapeType =  'LINEAR' | 'SYMMETRICAL';\nexport default {\n  LINEAR,\n  SYMMETRICAL,\n} as Record<ShapeType, Timer[]>;\n","import { Timer } from '../types';\n\nimport NUMBERS from '../constants/numbers';\nimport SHAPES, { ShapeType } from '../constants/shapes';\nimport { getRandomNumber } from '../utils';\n\nconst getArrTime = (): number[] => {\n  const time = new Date(Date.now());\n  const timeToString = time.toTimeString().replace(':', '').slice(0, 4);\n\n  return timeToString.split('').map((s) => parseInt(s, 10));\n};\n\n/**\n * Get a random set of configuration to display forms\n * @return Clocks config\n */\nconst getRandowShapedTimer = (type: ShapeType): Timer => {\n  const shapes = SHAPES[type];\n\n  const randomIndex = getRandomNumber(shapes.length - 1);\n  return shapes[randomIndex];\n};\n\nconst getSameShape = (nb: number, shapeType: ShapeType): Timer[] => {\n  const shape = getRandowShapedTimer(shapeType);\n\n  return Array(nb).fill(shape);\n};\nconst getDifferentShape = (nb: number, shapeType: ShapeType): Timer[] =>\n  Array(nb)\n    .fill(null)\n    .map(() => getRandowShapedTimer(shapeType));\n\n/**\n * Get the current time in a timer type\n */\nexport const getTimeTimer = (): any => getArrTime().map((nb) => NUMBERS[nb]);\n\nexport const getTimers = (isSame: boolean, nb = 2): Timer[] => {\n  const shapeType = isSame ? 'SYMMETRICAL' : 'LINEAR';\n\n  return isSame\n    ? getSameShape(nb, shapeType)\n    : getDifferentShape(nb, shapeType);\n};\n","import { last } from 'ramda';\nimport { Timer, Clock, AnimationType, Line, Number } from '../types';\nimport { getRandomBoolean } from '../utils';\nimport { getTimers, getTimeTimer } from './timers';\n\nconst NB_NUMBERS = 4;\nconst ANIMATION_DELAY = 300;\nconst MIN_ROTATION = 180;\n\nexport type Sequence = {\n  timer: Timer;\n  type: 'time' | 'wait' | 'shape';\n  animationTime: number;\n  delay?: number;\n  ltr?: boolean;\n  isReverse?: boolean;\n};\n\nconst isNeg = (nb: number): boolean => Math.sign(nb) === -1;\nconst roundRest = (restRotation: number): number => {\n  const restRound = Math.abs(restRotation);\n  const round = restRound >= 360 + MIN_ROTATION ? restRound - 360 : restRound;\n\n  return isNeg(restRotation) ? -round : round;\n};\nconst getStartPosition = (start: number): number =>\n  isNeg(start) ? 360 + (start % 360) : start % 360;\nconst getMinValue = (rest: number): number => (rest === 0 ? 360 : rest);\n\nexport const rotate = (start: number, end: number) =>\n  start + roundRest(360 - (getStartPosition(start) - end));\nexport const rotateReverse = (start: number, end: number) =>\n  start + roundRest(-getMinValue(getStartPosition(start)) + (end - 360));\n\nconst updateClocksProperties = (\n  numbers: Timer,\n  cb: (clock: Clock, xPos: number, yPos: number) => Clock,\n): Timer =>\n  numbers.map(\n    (number, numberIndex) =>\n      number.map(\n        (clockLines, clockLinesIndex) =>\n          clockLines.map((clock, clockIndex) =>\n            cb(clock, numberIndex * 2 + clockIndex, clockLinesIndex),\n          ) as Line,\n      ) as Number,\n  ) as Timer;\n\nexport const setClockDelay = (\n  clock: Clock,\n  xPos: number,\n  animationTime: number,\n  delay = 0,\n) => {\n  const animationDelay = xPos * delay;\n  return {\n    ...clock,\n    animationDelay,\n    animationTime: animationTime + NB_NUMBERS * delay - animationDelay,\n  };\n};\nconst computeDelays = (\n  timer: Timer,\n  animationTime: number,\n  delay?: number,\n  rtl = false,\n) =>\n  updateClocksProperties(timer, (c, xPos) =>\n    setClockDelay(c, rtl ? NB_NUMBERS * 2 - xPos : xPos, animationTime, delay),\n  );\n\nconst computeAnimationType = (timer: Timer, animationType: AnimationType) =>\n  updateClocksProperties(timer, (clock) => ({\n    ...clock,\n    animationType,\n  }));\n\nexport const rotateClock = (\n  clock: Clock,\n  { hours: currentHours, minutes: currentMinutes }: Clock,\n  isMinutesReversed = false,\n) => ({\n  ...clock,\n  hours: rotate(currentHours, clock.hours),\n  minutes: isMinutesReversed\n    ? rotateReverse(currentMinutes, clock.minutes)\n    : rotate(currentMinutes, clock.minutes),\n});\nconst computeRotation = (\n  timer: Timer,\n  curTimer: Timer,\n  { isMinutesReversed = false } = {},\n) =>\n  updateClocksProperties(timer, (c, xPos, yPos) =>\n    rotateClock(\n      c,\n      curTimer[Math.floor(xPos / 2)][yPos][xPos % 2],\n      isMinutesReversed,\n    ),\n  );\n\nexport const resetClock = ({ hours, minutes }: Clock): Clock => ({\n  hours: hours % 360,\n  minutes: minutes % 360,\n  animationTime: 0,\n  animationDelay: 0,\n});\nexport const resetTimer = (timer: Timer): Timer =>\n  updateClocksProperties(timer, resetClock);\n\nconst computeAnimationTypeByPosition = (\n  timer: Timer,\n  index: number,\n  nbTimers: number,\n): Timer => {\n  if (index === 0) {\n    return computeAnimationType(timer, 'start');\n  }\n  if (index === nbTimers - 1) {\n    return computeAnimationType(timer, 'end');\n  }\n  return timer;\n};\n\nconst computeTimer = (seq: Sequence, curTimer: Timer) => {\n  if (seq.type === 'wait') {\n    return computeDelays(curTimer, seq.animationTime, 0);\n  }\n  const nextTimerState = computeRotation(seq.timer, curTimer, {\n    isMinutesReversed: seq.isReverse,\n  });\n  return computeDelays(nextTimerState, seq.animationTime, seq.delay, seq.ltr);\n};\n\nexport const computeSequences = (\n  sequences: Sequence[],\n  lastTimer: Timer,\n): Timer[] =>\n  sequences\n    .reduce(\n      (acc: Timer[], seq: Sequence) => [\n        ...acc,\n        computeTimer(seq, last(acc) || lastTimer),\n      ],\n      [],\n    )\n    .map((state: Timer, index: number, arr: Timer[]) =>\n      computeAnimationTypeByPosition(state, index, arr.length),\n    );\n\nconst getWaitSequence = (timer: Timer): Sequence => ({\n  timer,\n  type: 'wait',\n  animationTime: 3000,\n});\nexport const run = (prevTimer: Timer, { animationTime = 0 }) => {\n  const isReverse = getRandomBoolean();\n  const sequences = getTimers(isReverse)\n    .reduce((acc: Sequence[], timer: Timer, index): Sequence[] => {\n      const hasDelay = index === 0 && getRandomBoolean();\n\n      return [\n        ...acc,\n        {\n          timer,\n          type: 'shape',\n          animationTime,\n          delay: index === 0 && getRandomBoolean() ? ANIMATION_DELAY : 0,\n          isReverse,\n        },\n        ...(hasDelay ? [getWaitSequence(timer)] : []),\n      ];\n    }, [])\n    .concat({ timer: getTimeTimer(), type: 'time', animationTime, isReverse });\n\n  return computeSequences(sequences, prevTimer);\n};\n","import React from 'react';\nimport './needle.css';\n\nconst Needle: React.FC<{\n  height: number;\n  width: number;\n}> = ({ height, width }) => {\n  const style = {\n    height,\n    width,\n    borderTopLeftRadius: width,\n    borderTopRightRadius: width,\n  };\n\n  return <div className=\"needle\" style={style} />;\n};\n\nexport default Needle;\n","import React from 'react';\nimport { Clock as ClockT } from '../../types';\n\nimport './clock.css';\n\nimport Needle from '../Needle/Needle';\n\nconst ANIMATION_START_TIMING = 'cubic-bezier(.27,0,.31,.41)';\nconst ANIMATION_END_TIMING = 'cubic-bezier(.9,.8,.62,.83)';\nconst ANIMATION_DEFAULT_TIMING = 'linear';\nconst ANIMATION_TIMING_CONFIG = {\n  start: ANIMATION_START_TIMING,\n  end: ANIMATION_END_TIMING,\n};\n\nexport const Clock: React.FC<{\n  size: number,\n  clock: ClockT,\n}> = ({\n  size,\n  clock,\n}) => {\n  const {\n    hours,\n    minutes,\n    animationTime,\n    animationDelay,\n    animationType,\n  } = clock;\n  const clockSizeStyle = {\n    width: size,\n    height: size,\n  };\n  const transitionTime = animationTime;\n  const transitionDelay = animationDelay || 0;\n  const transitionTiming = animationType && ANIMATION_TIMING_CONFIG[animationType]\n    ? ANIMATION_TIMING_CONFIG[animationType]\n    : ANIMATION_DEFAULT_TIMING;\n  const transition = `all ${transitionTime}ms ${transitionDelay}ms ${transitionTiming}`;\n\n  const needleWidth = size / 9;\n  const needleHeight = size / 2;\n  const style = {\n    hours: {\n      transform: `rotate(${hours}deg)`,\n      ...clockSizeStyle,\n      ...{ transition },\n    },\n    minutes: {\n      transform: `rotate(${minutes}deg)`,\n      ...clockSizeStyle,\n      ...{ transition },\n    },\n    needleRotate: {\n      transform: `translate(-50%, -${needleWidth / 2}px)`,\n    },\n  };\n\n  return (\n    <div className=\"clock\" style={clockSizeStyle}>\n      <div className=\"clock_needle\" style={style.minutes}>\n        <div className=\"clock_needleRotate\" style={style.needleRotate}>\n          <Needle height={needleHeight - 4} width={needleWidth} />\n        </div>\n      </div>\n      <div className=\"clock_needle\" style={style.hours}>\n        <div className=\"clock_needleRotate\" style={style.needleRotate}>\n          <Needle height={needleHeight} width={needleWidth} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Clock as ClockT } from '../../types';\n\nimport { Clock } from '../Clock/Clock';\n\n/**\n * Display a single clock block\n * @param {Array} clocks - Set of clocks that compose the line\n * @param { Object } options - Clocks Options\n */\nexport const NumberLineClock: React.FC<{\n  clock: ClockT;\n  options: {\n    clockSize: number;\n  };\n}> = ({ clock, options }) => (\n  <div className=\"clockclock24_number_line_clock\">\n    <Clock\n      clock={clock}\n      size={options.clockSize}\n    />\n  </div>\n);\n","import React, { ReactElement } from 'react';\nimport { Number, Line } from '../../types';\n\nimport { NumberLineClock } from './NumberLineClock';\n\n/**\n * Display a line of 2 clocks to form a number\n */\nexport const NumberLines: React.FC<{\n  numberLines: Number;\n  options: {\n    clockSize: number;\n  };\n}> = ({ numberLines, options }): ReactElement => (\n  <div>\n    {numberLines.map((numberLine: Line, index: number) => (\n      <div className=\"clockclock24_number_line\" key={index}>\n        {numberLine.map((clock, indexC: number) => (\n          <NumberLineClock\n            clock={clock}\n            options={options}\n            key={index + indexC}\n          />\n        ))}\n      </div>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { Number as NumberT } from '../../types';\n\nimport { NumberLines } from './NumberLines';\n\n/**\n * The number to display\n * @param {line} numberLines - Set of line to form the number\n * @param {Object} options  - Clocks options\n */\nexport const Number: React.FC<{\n  numberLines: NumberT;\n  options: {\n    clockSize: number;\n  };\n}> = ({ numberLines, options }) => (\n  <div className=\"clockclock24_number\">\n    <div className=\"number\">\n      <NumberLines numberLines={numberLines} options={options} />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const ButtonTest: React.FC<{\n  onClick: () => void\n}> = ({onClick}) => {\n  return (\n    <div\n      className=\"clockclock24_test_button\"\n      onClick={() => onClick()}\n    >\n      <span role=\"img\" aria-label=\"dance\">\n        💃\n      </span>\n    </div>\n  );\n}\n","import { last } from 'ramda';\nimport React, { Component } from 'react';\n\nimport { Timer } from '../../types';\n\nimport './clockClock24.css';\n\nimport {\n  startimeout,\n  runSequences,\n  getMaxAnimationTime,\n  Timeout,\n} from '../../utils';\nimport { run, resetTimer } from '../../services/engine';\nimport { getTimeTimer } from '../../services/timers';\n\nimport { Number } from './../Number/Number';\nimport { ButtonTest } from './ButtonTest';\n\nconst ONE_MILLI = 1000;\nconst ONE_MINUTES_IN_MILLI = 60 * ONE_MILLI;\n\n/**\n * Get the remaining time before the time change\n * @return Remaining time\n */\nconst getRemainingTime = (): number => {\n  const secondsInMilli = new Date().getSeconds() * ONE_MILLI;\n  return ONE_MINUTES_IN_MILLI - secondsInMilli;\n};\n\ntype ClockClock24Props = {\n  animationTime: number;\n  clockSize: number;\n  clockPadding: number;\n};\ntype ClockClock24State = { timer: Timer };\n\nexport default class ClockClock24 extends Component<\n  ClockClock24Props,\n  ClockClock24State\n> {\n  private timeout?: Timeout;\n  state: ClockClock24State = {\n    timer: getTimeTimer(),\n  };\n\n  componentDidMount(): void {\n    this.startNextCycle(1000);\n  }\n\n  componentWillUnmount(): void {\n    this.cancelTimeout();\n  }\n\n  startNextCycle(time: number) {\n    this.timeout = startimeout(time);\n\n    this.timeout.promise.then(() => this.startCycle());\n  }\n\n  animateTimer(timer: Timer): Promise<unknown> {\n    const animationTime = getMaxAnimationTime(timer);\n\n    this.setState({ timer });\n    this.timeout = startimeout(animationTime);\n\n    return this.timeout.promise;\n  }\n\n  startCycle(): void {\n    const { animationTime } = this.props;\n\n    this.cancelTimeout();\n\n    const sequences = run(this.state.timer, { animationTime });\n    const sequencesPromise = sequences.map((timer: Timer) => () =>\n      this.animateTimer(timer),\n    );\n\n    runSequences(sequencesPromise).then(() => {\n      const lastTimer = last(sequences);\n      if (!lastTimer) {\n        return null;\n      }\n\n      const clearTimer = resetTimer(lastTimer);\n      this.setState({ timer: clearTimer });\n\n      return this.nextTime();\n    });\n  }\n\n  nextTime(): void {\n    this.startNextCycle(getRemainingTime());\n  }\n\n  cancelTimeout(): void {\n    if (this.timeout) {\n      this.timeout.cancel();\n    }\n  }\n\n  onAnimateClick(): void {\n    this.startCycle();\n  }\n\n  render() {\n    const { timer } = this.state;\n    const { clockSize } = this.props;\n\n    return (\n      <div className=\"clockclock24_container\">\n        <div className=\"clockclock24\">\n          {timer.map((number, index) => (\n            <Number key={index} numberLines={number} options={{ clockSize }} />\n          ))}\n        </div>\n        <ButtonTest onClick={() => this.onAnimateClick()} />\n      </div>\n    );\n  }\n}\n","export default {\n  ANIMATION_TIME: 10000,\n  CLOCK_MAX_SIZE: 130,\n  CLOCK_PADDING: 3,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport ClockClock24 from './components/ClockClock24/ClockClock24';\nimport config from './config';\n\nconst NB_COLUMN_CLOCKS = 8;\n\nconst { clientWidth } = document.body;\nconst paddingClock = clientWidth >= 1100 ? 30 : 10;\nconst screenClockSize: number =\n  (document.body.clientWidth -\n    2 * paddingClock -\n    2 * config.CLOCK_PADDING * NB_COLUMN_CLOCKS) /\n  NB_COLUMN_CLOCKS;\n\nconst clockSize: number =\n  screenClockSize < config.CLOCK_MAX_SIZE\n    ? screenClockSize\n    : config.CLOCK_MAX_SIZE;\n\nReactDOM.render(\n  <div className=\"container\">\n    <ClockClock24\n      clockSize={clockSize}\n      clockPadding={config.CLOCK_PADDING}\n      animationTime={config.ANIMATION_TIME}\n    />\n  </div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}